/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 11);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./public/dashboard/js/complaints/action.js":
/*!**************************************************!*\
  !*** ./public/dashboard/js/complaints/action.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var validator_action;
$(function () {
  initOnEvents();
  initValidationComplaintAction();
  $('#complaint-action-status-submit').on('click', function (e) {
    e.preventDefault();
    validateComplaintAction();
  });
  $('#reporting-complaint-action-status-submit').on('click', function (e) {
    e.preventDefault();
    saveReportingCamplaintAction();
  });
});

function initOnEvents() {
  $('#modal_complaint_action_form').on('show.bs.modal', function () {
    if ($('#modal_complaint_action_form input[name=status]').val() == 'CLO') {
      initComplaintUsers($('#modal_complaint_action_form input[name=id]').val());
      initRole();
      $('.displayCloseOptions').show();
    }
  });
  $('#modal_complaint_action_form').on('hidden.bs.modal', function () {
    $(this).find('form')[0].reset();
    validator_action.resetForm();
    removeErrorPlacement();
    $('.displayCloseOptions').hide();
  });
  $('#modal_reporting_complaint_action_form').on('hidden.bs.modal', function () {
    $(this).find('form')[0].reset(); // validator_action.resetForm();

    removeErrorPlacement();
  });
}

function initValidationComplaintAction() {
  validator_action = $("#complaint-action-status-form").validate({
    //		focusCleanup: true,
    rules: {
      "reason": {
        required: true
      } //			'complaint_user_id_pk': {
      //				required: true
      //			},
      //			'system_role': {
      //				required:true
      //			}

    },
    messages: {
      "reason": {
        required: "The Remark is Required."
      } //			'complaint_user_id_pk': {
      //				required: "Primary user is Required."
      //			},
      //			'system_role': {
      //				required: "Primary role is Required."
      //			} 

    },
    highlight: function highlight(label) {
      $(label).closest('.form-group').removeClass('has-success').addClass('has-error');

      if ($(label).is('select')) {
        $(label).parent().find('.select2-container .selection .select2-selection').removeClass('has-success').addClass('has-select-error');
      }
    },
    success: function success(label) {
      $(label).closest('.form-group').removeClass('has-error');

      if ($(label).is('select')) {
        $(label).parent().find('.select2-container .selection .select2-selection').removeClass('has-select-error');
      }

      label.remove();
    },
    errorPlacement: function errorPlacement(error, element) {
      if (element.hasClass('select2-hidden-accessible')) {
        error.appendTo(element.parent());
      } else {
        var placement = element.closest('.input-group');

        if (!placement.get(0)) {
          placement = element;
        }

        if (error.text() !== '') {
          placement.after(error);
        }
      }
    },
    submitHandler: function submitHandler(form) {}
  });
}

function validateComplaintAction() {
  if ($('#modal_complaint_action_form input[name=status]').val() == 'CLO') {
    saveCamplaintAction();
  } else {
    if ($("#complaint-action-status-form").valid()) {
      saveCamplaintAction();
    } else {
      return false;
    }
  }
}

function saveCamplaintAction() {
  var formData = $("#complaint-action-status-form").serialize();
  $.ajax({
    url: custom_url + '/' + $('#modal_complaint_action_form input[name=flow]').val() + '/status',
    type: 'PUT',
    data: formData,
    dataType: 'JSON',
    beforeSend: function beforeSend() {
      $('#complaint-action-status-submit').prop('disabled', true);
    },
    success: function success(data) {
      $('#complaint-action-status-submit').prop('disabled', false);

      if ($('#modal_complaint_action_form #refresh').val()) {
        if ($('#modal_complaint_action_form #refresh_type').val() == 'page') {
          alertService({
            title: 'Success !',
            text: "Reference updated successfully.",
            type: 'success',
            redirectUrl: data.redirect_url
          });
          $('#modal_complaint_action_form').modal('hide');
        } else {
          $('#modal_complaint_action_form').modal('hide');
          alertService({
            title: 'Success !',
            text: "Reference updated successfully.",
            type: 'success'
          });
        }

        refreshTable($('#modal_complaint_action_form #refresh_table').val());
      }
    },
    error: function error(data) {
      $('#complaint-action-status-submit').prop('disabled', false);
      var res = data.responseJSON;
      serverErrorHandler(res);
    },
    complete: function complete() {}
  });
}

function saveReportingCamplaintAction() {
  var formData = $("#reporting-complaint-action-status-form").serialize();
  $.ajax({
    url: custom_url + '/' + $('#modal_reporting_complaint_action_form input[name=flow]').val() + '/status',
    type: 'PUT',
    data: formData,
    dataType: 'JSON',
    beforeSend: function beforeSend() {
      $('#reporting-complaint-action-status-submit').prop('disabled', true);
    },
    success: function success(data) {
      $('#reporting-complaint-action-status-submit').prop('disabled', false);

      if ($('#modal_reporting_complaint_action_form #refresh').val()) {
        if ($('#modal_reporting_complaint_action_form #refresh_type').val() == 'page') {
          alertService({
            title: 'Success !',
            text: "Reference updated successfully.",
            type: 'success',
            redirectUrl: data.redirect_url
          });
          $('#modal_reporting_complaint_action_form').modal('hide');
        } else {
          $('#modal_reporting_complaint_action_form').modal('hide');
          alertService({
            title: 'Success !',
            text: "Reference updated successfully.",
            type: 'success'
          });
        }

        refreshTable($('#modal_reporting_complaint_action_form #refresh_table').val());
      }
    },
    error: function error(data) {
      $('#reporting-complaint-action-status-submit').prop('disabled', false);
      var res = data.responseJSON;
      serverErrorHandler(res);
    },
    complete: function complete() {}
  });
} //function initComplaintUsers(id){
//	var init_selectors = [	
//		{
//			class: '.select-complaint-user-search',
//			url: '/dashboard/complaints/get/users/all',
//			noResults_label: '',
//			display_text_box: '',
//			id: '#complaint_user_id_pk',
//			modal_name: "",
//			noResults_btn: false,
//			autofocus: false,
//			resource_id: id,
//			disabled: false
//		}
//	];
//	
//	$.each(init_selectors, function(index, selector){
//		initSetupSelectorsWithAjax(selector);
//	});	
//}

/***/ }),

/***/ 11:
/*!********************************************************!*\
  !*** multi ./public/dashboard/js/complaints/action.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! C:\wamp64\www\sits\complaintms_NSC_V1\public\dashboard\js\complaints\action.js */"./public/dashboard/js/complaints/action.js");


/***/ })

/******/ });